#!/usr/bin/env python3

# Copyright (C) 2015 Martin Wimpress <code@ubuntu-mate.org>
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.

import os
import platform
import subprocess
import sys
import urllib.request

def add_repo_key(repo_key_url):
    print('Getting ' + repo_key_url)
    if os.path.exists(os.path.join('/', 'tmp', 'pub.key')):
        os.remove(os.path.join('/', 'tmp', 'pub.key'))

    # Download the file from `url` and save it locally under `file_name`:
    with urllib.request.urlopen(repo_key_url) as response, open(os.path.join('/', 'tmp', 'pub.key'), 'wb') as out_file:
        data = response.read() # a `bytes` object
        out_file.write(data)

def add_repo(lines, listname):
    print('Writing ' + os.path.join('/','etc','apt','sources.list.d',listname))
    with open(os.path.join('/','etc','apt','sources.list.d',listname), 'w') as f:
        f.write('\n'.join(lines))

if __name__ == "__main__":
    if len(sys.argv) == 2:
        apturl = sys.argv[1]
        if apturl.startswith('apt:'):
            print('URL is ' + apturl)
        else:
            print('URL in invalid: ' + apturl)
            sys.exit(1)
    else:
        print("No package supplied")
        sys.exit(1)

    if os.getuid() == 0:
        codename = platform.dist()[2]
        
        if (apturl.find('skype') >= 1) or (apturl.find('adobe-flashplugin') >=1 ):
            subprocess.call(['apt-add-repository', '--enable-source', '--yes', 'http://archive.canonical.com/ubuntu partner'])
            subprocess.call(['synaptic', '--hide-main-window', '--update-at-startup', '--non-interactive'])
        elif (apturl.find('telegram') >= 1):
            subprocess.call(['apt-add-repository', '--enable-source', '--yes', 'ppa:atareao/telegram'])
            subprocess.call(['synaptic', '--hide-main-window', '--update-at-startup', '--non-interactive'])            
        elif apturl.find('google-chrome-stable') >=1:
            add_repo_key('http://dl.google.com/linux/linux_signing_key.pub')
            subprocess.call(['/usr/bin/apt-key', 'add', os.path.join('/', 'tmp', 'pub.key')])
            lines = ['deb [arch=amd64,i386] http://dl.google.com/linux/chrome/deb/ stable main']
            add_repo(lines, 'google-chrome.list')
            subprocess.call(['synaptic', '--hide-main-window', '--update-at-startup', '--non-interactive'])
        elif apturl.find('steam-launcher') >=1:
            add_repo_key('http://repo.steampowered.com/steam/signature.gpg')
            subprocess.call(['/usr/bin/apt-key', 'add', os.path.join('/', 'tmp', 'pub.key')])
            lines = ['deb [arch=amd64,i386] http://repo.steampowered.com/steam/ precise steam',
                     'deb-src [arch=amd64,i386] http://repo.steampowered.com/steam/ precise steam',
                     '']
            add_repo(lines, 'steam.list')
            subprocess.call(['synaptic', '--hide-main-window', '--update-at-startup', '--non-interactive'])
        elif apturl.find('spotify-client') >=1:
            subprocess.call(['apt-key', 'adv', '--kf eyserver', 'keyserver.ubuntu.com', '--recv-keys', '94558F59'])
            lines = ['deb http://repository.spotify.com stable non-free']
            add_repo(lines, 'spotify.list')
            subprocess.call(['synaptic', '--hide-main-window', '--update-at-startup', '--non-interactive'])
        elif apturl.find('dropbox') >=1:
            if codename == 'wily':
                codename == 'vivid'

            subprocess.call(['apt-key', 'adv', '--keyserver', 'pgp.mit.edu', '--recv-keys', '5044912E'])
            lines = ['deb http://linux.dropbox.com/ubuntu/ ' + codename + ' main']
            add_repo(lines, 'dropbox.list')
            subprocess.call(['synaptic', '--hide-main-window', '--update-at-startup', '--non-interactive'])
        elif apturl.find('virtualbox-4.3') >=1:
            if codename == 'wily':
                codename == 'vivid'
            add_repo_key('https://www.virtualbox.org/download/oracle_vbox.asc')
            subprocess.call(['/usr/bin/apt-key', 'add', os.path.join('/', 'tmp', 'pub.key')])
            lines = ['deb http://download.virtualbox.org/virtualbox/debian ' + codename + ' contrib']
            add_repo(lines, 'virtualbox.list')
            subprocess.call(['synaptic', '--hide-main-window', '--update-at-startup', '--non-interactive'])    
        
        subprocess.call(['apturl-gtk', apturl])
    else:
        print('Authentication was cancelled.')
